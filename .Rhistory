write.csv(alldat_wide,file=paste(dir_weight, "weight_iat_wide.csv", sep="\\"))
#view(dfSummary(alldat_wide))
alldat_wide <- alldat_wide %>% drop_na(year)
alldat_wide$Year <- as.factor(alldat_wide$year)
p1 <- ggline(alldat_wide, x = "Year",
y = c("IAT"),
combine = TRUE,
ylab = "IAT",
color = "black",
add = c("mean_sd", "violin"),
add.params = list(color = "year"),
palette = rep("gray",16)
)
p2 <- ggline(alldat_wide, x = "Year",
y = c("diff_thermo"),
combine = TRUE,
ylab = "diff_thermo",
color = "black",
add = c("mean_sd", "violin"),
add.params = list(color = "year"),
palette = rep("red",16)
)
p3 <- ggline(alldat_wide, x = "Year",
y = c("diff_thermobe"),
combine = TRUE,
ylab = "diff_thermobe",
color = "black",
add = c("mean_sd", "violin"),
add.params = list(color = "year"),
palette = rep("red",16)
)
p4 <- ggline(alldat_wide, x = "Year",
y = c("att"),
combine = TRUE,
ylab = "att",
color = "black",
add = c("mean_sd", "violin"),
add.params = list(color = "year"),
palette = rep("blue",16)
)
p5 <- ggline(alldat_wide, x = "Year",
y = c("diff_ident"),
combine = TRUE,
ylab = "diff_ident",
color = "black",
add = c("mean_sd", "violin"),
add.params = list(color = "year"),
palette = rep("green",16)
)
cowplot::plot_grid(p1, p2, p3, p4, p5, labels = "AUTO", ncol = 2, align = 'h')
####################################################################################################################
#Read session data
####################################################################################################################
path <- paste(dir_usa, "sessionTasks.txt", sep="\\")
sl <- read.delim(path)[,c("session_id", "task_id", "task_number", "user_agent", "task_creation_date", "session_last_update_date")]
nrow(sl)
sl$task_creation_date <- as.character(sl$task_creation_date)
sl$date <- substr(sl$task_creation_date, 1, nchar(sl$task_creation_date)-9)
sl$year <- substring(sl$date, 6)
years <- sl[,c('session_id', 'year')]
years <- years[!duplicated(years$session_id),]
unique(years$year)
table(years$year, exclude=NULL)
write.csv(years,file=paste(dir_usa, "years.csv", sep="\\"))
rm(sl)
#Read reaction time tasks
path <- paste(dir_usa, "iat.txt", sep="\\")
iat <- readr::read_delim(path, "\t", escape_double = FALSE, trim_ws = TRUE)
nrow(iat)
#Convert trial_error to numeric, and make sure trial_latency is numeric
iat$trial_error <- as.numeric(as.character(iat$trial_error))
class(iat$trial_error)
class(iat$trial_latency)
# critical blocks: 2,3,5,6
# drop non-critical blocks
iatRaw <- iat %>% dplyr::filter(str_detect(block_pairing_definition,"/"))
#task_name helps differentiate between the different reaction time tasks.
unique(iat$task_name)
iatRaw <- iatRaw %>% filter(task_name != "demo_racecec")
unique(iatRaw$task_name)
rm(iat)
# blockOrder:
# usaa:
# 2,3: ישראל/טוב,ארצות הברית/רע ==> ownGoodFirst
# 5,6: ארצות הברית/טוב,ישראל/רע
#usab:
# 2,3: ארצות הברית/טוב,ישראל/רע ==> usaGoodFirst
# 5,6: ישראל/טוב,ארצות הברית/רע
# usac:
# 2,3: ישראל/רע,ארצות הברית/טוב ==> usaGoodFirst
# 5,6: ארצות הברית/רע,ישראל/טוב
# usad:
# 2,3: ארצות הברית/רע,ישראל/טוב ==> ownGoodFirst
# 5,6: ישראל/רע,ארצות הברית/טוב
# code blockOrder
iatRaw$blockOrder <- NA
iatRaw$blockOrder[iatRaw$task_name %in% c('usaa', 'usad')] <- 'ownGood1st'
iatRaw$blockOrder[iatRaw$task_name %in% c('usab' , 'usac')] <- 'ownGood2nd'
table(iatRaw$blockOrder)
# code blockName
iatRaw$blockName <- NA
iatRaw$blockName[iatRaw$blockOrder == 'ownGood1st' &
iatRaw$block_number == 2] <- "B3"
iatRaw$blockName[iatRaw$blockOrder == 'ownGood1st' &
iatRaw$block_number == 3] <- "B4"
iatRaw$blockName[iatRaw$blockOrder == 'ownGood1st' &
iatRaw$block_number == 5] <- "B6"
iatRaw$blockName[iatRaw$blockOrder == 'ownGood1st' &
iatRaw$block_number == 6] <- "B7"
iatRaw$blockName[iatRaw$blockOrder == 'ownGood2nd' &
iatRaw$block_number == 2] <- "B6"
iatRaw$blockName[iatRaw$blockOrder == 'ownGood2nd' &
iatRaw$block_number == 3] <- "B7"
iatRaw$blockName[iatRaw$blockOrder == 'ownGood2nd' &
iatRaw$block_number == 5] <- "B3"
iatRaw$blockName[iatRaw$blockOrder == 'ownGood2nd' &
iatRaw$block_number == 6] <- "B4"
table(iatRaw$blockName, exclude=NULL)
# save raw file to file
#write.csv(iatRaw,file=paste(dir_age, "iatRaw.csv", sep="\\"))
## compute block-type means and D scores for analysis
#Use Dan Martin's scoring function. It seems faster than the one Aharon wrote.
iatscore <- IAT::cleanIAT(iatRaw, block_name = "blockName",
trial_blocks = c("B3", "B4", "B6", "B7"),
session_id = "session_id",
trial_latency = "trial_latency",
trial_error = "trial_error",
v_error = 2, v_extreme = 2, v_std = 1) #v_error=2 means recode error latency to m+600
#Sanity check. Does the scores seem fine?
summary(iatscore)
#drop Ps with more than 10% of fast trials (as recommended in Greenwald, Nosek, & Banaji, 2003).
iatscore <- iatscore %>% dplyr::filter(SUBEXCL==0)
#calculate block-type means
iatscore <- iatscore %>% mutate(MB34 = (MB3 + MB4)/2,
MB67 = (MB6 + MB7)/2)
## block order (congruent -> incongruent / opposite)
iatscore$blockOrder <- iatRaw$blockOrder[match(iatscore$session_id, iatRaw$session_id)]
iatscore$isCongFirst <- NA
iatscore$isCongFirst <- ifelse(iatscore$blockOrder=="ownGood1st",'congFirst',
ifelse(iatscore$blockOrder=="ownGood2nd",'incongFirst', NA))
table(iatscore$isCongFirst, exclude=NULL)
## code Ps that did not complete the study
#iatscore$comp <- sessions$ord6[match(iatscore$session_id, sessions$session_id)]
#drop NAs from incomplete sessions
#iatscore <- iatscore %>% tidyr::drop_na(comp)  # <= we can't use this because we didn't have task_id data before 2009
# save year
iatscore$year <- years$year[match(iatscore$session_id, years$session_id)]
iatscore$blockOrder <- iatRaw$blockOrder[match(iatscore$session_id, iatRaw$session_id)]
# save processed dataframe to file
write.csv(iatscore,file=paste(dir_usa, "iatscore.csv", sep="\\"))
#Remove data frames to free memory
rm(iatRaw)
#load 'explicit' file
path <- paste(dir_usa, "explicit.txt", sep="\\")
explicit <- readr::read_delim(path, "\t", escape_double = FALSE, trim_ws = TRUE)
# explore dataframe
unique(explicit$question_name)
# recode response values
explicit <- transform(explicit, question_response=as.numeric(question_response))
explicit$question_response[explicit$question_response == -999] <- NA
# process all questionnairs
# thermometer (Thermology)
# VALUES: 0 "very cold" 1 "1" 2 "2" 3 "3" 4 "4" 5 " "neutral"" 6 "6" 7 "7" 8 "8" 9 "9" 10 "very warm"
thermo <- explicit %>% dplyr::filter(question_name=="Tisrael" | question_name=="Tusa")
thermo$questionnaire <- "thermo"
# att/ preference between the categories
# after 2006 att changed its scale from 1-5 to 1-7
# att5 = scale 1-5; att7 = scale 1-7
att <- explicit %>% dplyr::filter(question_name=="att")
att$questionnaire <- "att"
# rwa / right wing authoritarianism
# rwaz1 - rwaz15
# VALUES: 1-5 (disagree-agree)
rwa <- explicit %>% dplyr::filter(question_name=="rwaz1" | question_name=="rwaz2" | question_name=="rwaz3" | question_name=="rwaz4" | question_name=="rwaz5" | question_name=="rwaz6" | question_name=="rwaz7" | question_name=="rwaz8" | question_name=="rwaz9" | question_name=="rwaz10" | question_name=="rwaz11" | question_name=="rwaz12" | question_name=="rwaz13" | question_name=="rwaz14" | question_name=="rwaz15")
rwa$questionnaire <- "rwa"
# sdo / social dominance orientation
# sdo1 - sdo12
# VALUES: 1-5 (disagree-agree)
sdo <- explicit %>% dplyr::filter(question_name=="sdo1" | question_name=="sdo2" | question_name=="sdo3" | question_name=="sdo4" | question_name=="sdo5" | question_name=="sdo6" | question_name=="sdo7" | question_name=="sdo8" | question_name=="sdo9" | question_name=="sdo10" | question_name=="sdo11" | question_name=="sdo12")
sdo$questionnaire <- "sdo"
# num / How many IATs have you previously performed?
num <- explicit %>% dplyr::filter(question_name=="num")
num$questionnaire <- "num"
explicitLong <- bind_rows(thermo,att,rwa,sdo,num)
explicitLong <- explicitLong %>% select(-c(task_number, question_number, questionnaire_name,attempt, study_name))
# turn all questionnairs to wide format
explicitLong$question_response[explicitLong$question_response=='.'] <- NA
explicitLong$question_response[explicitLong$question_response=='null'] <- NA
#class(explicitLong$session_id)
explicitLong <- explicitLong[!is.na(explicitLong$session_id),]
#Convert to wide format by subject.
explicitWide <- dcast(explicitLong, session_id ~ question_name, value.var = 'question_response')
# add year to wide df
explicitWide$year <- years$year[match(explicitWide$session_id, years$session_id)]
# add IAT D score
alldat_wide <- explicitWide
alldat_wide$IAT <- iatscore$IAT[match(explicitWide$session_id, iatscore$session_id)]
alldat_wide$blockOrder <- iatscore$blockOrder[match(alldat_wide$session_id, iatscore$session_id)]
## aggregate responses
alldat_wide$diff_thermo <- alldat_wide$Tisrael - alldat_wide$Tusa
alldat_wide$sdo_mean <- rowMeans(alldat_wide[,c('sdo1', 'sdo2', 'sdo3', 'sdo4', 'sdo5', 'sdo6', 'sdo7', 'sdo8', 'sdo9', 'sdo10', 'sdo11', 'sdo12')],na.rm = T)
alldat_wide$rwa_mean <- rowMeans(alldat_wide[,c('rwaz1', 'rwaz2', 'rwaz3', 'rwaz4', 'rwaz5', 'rwaz6', 'rwaz7', 'rwaz8', 'rwaz9', 'rwaz10', 'rwaz11', 'rwaz12', 'rwaz13', 'rwaz14', 'rwaz15')],na.rm = T)
##save to file
write.csv(alldat_wide,file=paste(dir_usa, "usa_iat_wide.csv", sep="\\"))
rm(explicitLong, explicitWide, explicit, years)
#load 'explicit' file
path <- paste(dir_usa, "explicit.txt", sep="\\")
explicit <- readr::read_delim(path, "\t", escape_double = FALSE, trim_ws = TRUE)
# demographics
# edu (with a 14-point scale), religion (Religious Affiliation), raceomb, major, religionid, genoccupation, countryres, party, sex, countrycit, age, postcodenow, occupation, ethnic, ethnicityomb, postcodelong, politicalid, politicalparty
demographics <- explicit[explicit$questionnaire_name %in% c('demographics'),]
demographics$question_response[demographics$question_response=='.'] <- NA
demographics$question_response[demographics$question_response=='null'] <- NA
demographics <- demographics[!is.na(demographics$session_id),]
#Convert to wide format by subject.
demographicsWide <- dcast(demographics, session_id ~ question_name, value.var = 'question_response')
#We can remove the original data frame now to free resources
rm(demographics)
table(demographicsWide$raceomb, exclude=NULL)
demographicsWide$ethnic.c <- mapvalues(demographicsWide$raceomb,
from=c('AFR',  'AMR',  'ARB',  'ASI',
'BTH', 'BTR','EST','ETP',
'OTH', 'RUS', 'STH', 'WST', 'ZBR'),
to=c('North Africa', 'North America', 'Arab countries',
'East Asia', 'Mixed Miz/Ash', 'Mixed (other)',
'East Europe', 'Ethiopia', 'Other', 'Russia',
'South American', 'West Europe', '5+ Zabar'))
table(demographicsWide$ethnic.c, exclude=NULL)
# combine with the rest of the data
alldat_wide <- full_join(demographicsWide,alldat_wide, by = "session_id")
rm(demographicsWide)
##save to file
write.csv(alldat_wide,file=paste(dir_usa, "usa_iat_wide.csv", sep="\\"))
#view(dfSummary(alldat_wide))
alldat_wide <- alldat_wide %>% drop_na(year)
alldat_wide$Year <- as.factor(alldat_wide$year)
p1 <- ggline(alldat_wide, x = "Year",
y = c("IAT"),
combine = TRUE,
ylab = "IAT",
color = "black",
add = c("mean_sd", "violin"),
add.params = list(color = "year"),
palette = rep("gray",16)
)
p2 <- ggline(alldat_wide, x = "Year",
y = c("diff_thermo"),
combine = TRUE,
ylab = "diff_thermo",
color = "black",
add = c("mean_sd", "violin"),
add.params = list(color = "year"),
palette = rep("red",16)
)
p3 <- ggline(alldat_wide, x = "Year",
y = c("att"),
combine = TRUE,
ylab = "att",
color = "black",
add = c("mean_sd", "violin"),
add.params = list(color = "year"),
palette = rep("red",16)
)
cowplot::plot_grid(p1, p2, p3, labels = "AUTO", ncol = 2, align = 'h')
age <- fread("C:\\Users\\Lenovo\\Google Drive\\School\\PhD\\Lab projects\\iat israel\\israel_data\\age\\age_iat_wide.csv") %>% filter(year >= 2009)
ethnic <- fread("C:\\Users\\Lenovo\\Google Drive\\School\\PhD\\Lab projects\\iat israel\\israel_data\\ethnicity\\ethnic_iat_wide.csv") %>% filter(year >= 2009)
gender_science <- fread("C:\\Users\\Lenovo\\Google Drive\\School\\PhD\\Lab projects\\iat israel\\israel_data\\gender_science\\gender_science_iat_wide.csv") #%>% filter(year >= 2009)
race <- fread("C:\\Users\\Lenovo\\Google Drive\\School\\PhD\\Lab projects\\iat israel\\israel_data\\race\\race_iat_wide.csv") %>% filter(year >= 2009)
sexuality <- fread("C:\\Users\\Lenovo\\Google Drive\\School\\PhD\\Lab projects\\iat israel\\israel_data\\sexuality\\sexuality_iat_wide.csv") %>% filter(year >= 2009)
weight <- fread("C:\\Users\\Lenovo\\Google Drive\\School\\PhD\\Lab projects\\iat israel\\israel_data\\weight\\weight_iat_wide.csv") %>% filter(year >= 2009)
skin <- fread("C:\\Users\\Lenovo\\Google Drive\\School\\PhD\\Lab projects\\iat israel\\israel_data\\skin\\skin_iat_wide.csv") %>% filter(year >= 2009)
usa <- fread("C:\\Users\\Lenovo\\Google Drive\\School\\PhD\\Lab projects\\iat israel\\israel_data\\usa\\usa_iat_wide.csv") %>% filter(year >= 2009)
age1 <- age %>% select(session_id,att,diff_thermo,IAT,politicalid,religionid,sex) %>% mutate(Task = "Age")
ethnic1 <- ethnic %>% select(session_id,att,IAT,politicalid,religionid,sex) %>% mutate(Task = "Ethnicity")
race1 <- race %>% select(session_id,att,diff_thermo,IAT,politicalid,religionid,sex) %>% mutate(Task = "Race")
skin1 <- skin %>% select(session_id,diff_thermo,IAT,politicalid,religionid,sex) %>% mutate(Task = "Skin")
weight1 <- weight %>% select(session_id,att,diff_thermo,IAT,politicalid,religionid,sex) %>% mutate(Task = "Weight")
sexuality1 <- sexuality %>% select(session_id,att,IAT,politicalid,religionid,sex) %>% mutate(Task = "Sexuality")
#gender_science1 <- gender_science %>% select(session_id,att,IAT,politicalid,religionid,sex) %>% mutate(Task = "Gender-Science")
usa1 <- usa %>% select(session_id,att,diff_thermo,IAT,politicalid,religionid,sex) %>% mutate(Task = "Nationalism")
combined_df <- bind_rows(age1,ethnic1,race1,skin1,weight1,sexuality1,usa1)
combined_df %>% corrMatrix(vars = vars(IAT, att, diff_thermo,politicalid,religionid))
?corrMatrix
combined_df %>% corrMatrix(vars = vars(IAT, att, diff_thermo,politicalid,religionid), n = T, pearson = T)
age %>% corrMatrix(vars = vars(IAT, att, diff_thermo,politicalid,religionid), n = T, pearson = T)
pp <- ggviolin(ethnic, x = "ethnic.c",
y = c("IAT"),
combine = TRUE,
ylab = "IAT",
color = "black",
fill = "lightblue",
facet = "Task",
add = c("mean_ci"),
draw_quantiles = c(0.25,0.5,0.75)
)
pp <- pp + geom_hline(yintercept=0, linetype="dashed",
color = "darkblue", size=1.2)
pp <- pp +
font("title", size = 14, color = "black", face = "bold")+
font("legend.text", size = 13, color = "black", face = "bold")+
font("xlab", size = 14, color = "black", face = "bold")+
font("ylab", size = 14, color = "black", face = "bold")+
font("xy.text", size = 10, color = "black")
pp <- pp +theme(legend.position="none")
pp
pp <- ggviolin(ethnic, x = "ethnic.c",
y = c("IAT"),
combine = TRUE,
ylab = "IAT",
color = "black",
fill = "lightblue",
add = c("mean_ci"),
draw_quantiles = c(0.25,0.5,0.75)
)
pp <- pp + geom_hline(yintercept=0, linetype="dashed",
color = "darkblue", size=1.2)
pp <- pp +
font("title", size = 14, color = "black", face = "bold")+
font("legend.text", size = 13, color = "black", face = "bold")+
font("xlab", size = 14, color = "black", face = "bold")+
font("ylab", size = 14, color = "black", face = "bold")+
font("xy.text", size = 10, color = "black")
pp <- pp +theme(legend.position="none")
pp
pp <- ggviolin(ethnic, x = "ethnic.c",
y = c("IAT"),
combine = TRUE,
ylab = "IAT",
xlab = "Ethnicity",
color = "black",
fill = "lightblue",
add = c("mean_ci"),
draw_quantiles = c(0.25,0.5,0.75)
)
pp <- pp + geom_hline(yintercept=0, linetype="dashed",
color = "darkblue", size=1.2)
pp <- pp +
font("title", size = 14, color = "black", face = "bold")+
font("legend.text", size = 13, color = "black", face = "bold")+
font("xlab", size = 14, color = "black", face = "bold")+
font("ylab", size = 14, color = "black", face = "bold")+
font("xy.text", size = 10, color = "black")
pp <- pp +theme(legend.position="none")
pp
ethnic1 <- ethnic %>% drop_na(ethnic.c)
pp <- ggviolin(ethnic1, x = "ethnic.c",
y = c("IAT"),
combine = TRUE,
ylab = "IAT",
xlab = "Ethnicity",
color = "black",
fill = "lightblue",
add = c("mean_ci"),
draw_quantiles = c(0.25,0.5,0.75)
)
pp <- pp + geom_hline(yintercept=0, linetype="dashed",
color = "darkblue", size=1.2)
pp <- pp +
font("title", size = 14, color = "black", face = "bold")+
font("legend.text", size = 13, color = "black", face = "bold")+
font("xlab", size = 14, color = "black", face = "bold")+
font("ylab", size = 14, color = "black", face = "bold")+
font("xy.text", size = 10, color = "black")
pp <- pp +theme(legend.position="none")
pp
yy <- ethnic %>% group_by(ethnic.c) %>% tally()
yyt <- as.data.frame(t(yy$n))
View(yy)
yy[1]
colnames(yyt) <- yy[1]
View(yyt)
yy <- ethnic %>% group_by(ethnic.c) %>% tally()
yyt <- as.data.frame(t(yy$n))
yy <- ethnic %>% drop_na (ethnic.c) %>% group_by(ethnic.c) %>% tally()
yyt <- as.data.frame(t(yy$n))
View(yy)
yy <- ethnic %>% drop_na (ethnic.c) %>% group_by(ethnic.c) %>% tally()
yyt <- as.data.frame(t(yy$n))
colnames(yyt) <- c("5+ Zabar", "Arab countries", "East Asia", "East Europe", "Ethiopia", "Mixed (other)",
"Mixed Miz/Ash", "North Africa", "North America", "Other", "Russia", "South American", "West Europe")
yyt %>% kable() %>% kable_styling(bootstrap_options = c("striped",
"hover", "condensed", full_width = F, position = "left"))
pp
ethnic$ethnicity <- NA
ethnic$ethnicity[ethnic$ethnic.c == "5+ Zabar"] <- "Zabar"
ethnic$ethnicity[ethnic$ethnic.c == "Arab countries"] <- "Mizrahi"
ethnic$ethnicity[ethnic$ethnic.c == "North Africa"] <- "Mizrahi"
ethnic$ethnicity[ethnic$ethnic.c == "East Europe"] <- "Ashkenazi"
ethnic$ethnicity[ethnic$ethnic.c == "West Europe"] <- "Ashkenazi"
ethnic$ethnicity[ethnic$ethnic.c == "Russia"] <- "Ashkenazi"
ethnic$ethnicity[ethnic$ethnic.c == "Mixed Miz/Ash"] <- "Mixed Miz/Ash"
ethnic$ethnicity[ethnic$ethnic.c == "East Asia"] <- "Other"
ethnic$ethnicity[ethnic$ethnic.c == "Ethiopia"] <- "Other"
ethnic$ethnicity[ethnic$ethnic.c == "Mixed (other)"] <- "Other"
ethnic$ethnicity[ethnic$ethnic.c == "North America"] <- "Other"
ethnic$ethnicity[ethnic$ethnic.c == "Other"] <- "Other"
ethnic$ethnicity[ethnic$ethnic.c == "South American"] <- "Other"
ee <- ethnic %>% group_by(ethnicity) %>% tally()
eet <- as.data.frame(t(ee$n))
colnames(eet) <- c("Ashkenazi", "Mixed Miz/Ash", "Mizrahi", "Other",
"Zabar")
eet %>% kable() %>% kable_styling(bootstrap_options = c("striped",
"hover", "condensed", full_width = F, position = "left"))
pp <- ggviolin(ethnic, x = "ethnicity",
y = c("IAT"),
combine = TRUE,
ylab = "IAT",
xlab = "Ethnicity",
color = "black",
fill = "lightblue",
add = c("mean_ci"),
draw_quantiles = c(0.25,0.5,0.75)
)
pp <- pp + geom_hline(yintercept=0, linetype="dashed",
color = "darkblue", size=1.2)
pp <- pp +
font("title", size = 14, color = "black", face = "bold")+
font("legend.text", size = 13, color = "black", face = "bold")+
font("xlab", size = 14, color = "black", face = "bold")+
font("ylab", size = 14, color = "black", face = "bold")+
font("xy.text", size = 10, color = "black")
pp <- pp +theme(legend.position="none")
pp
pp
ethnic1 <- ethnic %>% drop_na(ethnic.c)
pp <- ggviolin(ethnic1, x = "ethnic.c",
y = c("IAT"),
combine = TRUE,
ylab = "IAT",
xlab = "Ethnicity",
color = "black",
fill = "lightblue",
add = c("mean_ci"),
draw_quantiles = c(0.25,0.5,0.75)
)
pp <- pp + geom_hline(yintercept=0, linetype="dashed",
color = "darkblue", size=1.2)
pp <- pp +
font("title", size = 14, color = "black", face = "bold")+
font("legend.text", size = 13, color = "black", face = "bold")+
font("xlab", size = 14, color = "black", face = "bold")+
font("ylab", size = 14, color = "black", face = "bold")+
font("xy.text", size = 10, color = "black")
pp <- pp +theme(legend.position="none")
pp
pp
knitr::opts_chunk$set(
echo = TRUE,
message = FALSE,
warning = FALSE,
cache = FALSE,
comment = NA,
prompt = FALSE,
tidy = TRUE
)
library(knitr)
options(max.print="275")
options(width = 1230)
opts_knit$set(width=75)
pacman::p_load(data.table,ggplot2,rlang,rmdformats,magrittr,dplyr,knitr,kableExtra,tidyr,jmv, ggpubr, table1, ggstatsplot, effectsize, correlation, see, report, ggalluvial,ggmosaic,plotly,networktree,bootnet)
#source("C:\\Users\\Lenovo\\Google Drive\\School\\PhD\\Pilots\\analysis\\RScriptsForAnalysis\\yba.funcs.R")
age <- fread("C:\\Users\\Lenovo\\Google Drive\\School\\PhD\\Lab projects\\iat israel\\israel_data\\age\\age_iat_wide.csv") %>% filter(year >= 2009)
ethnic <- fread("C:\\Users\\Lenovo\\Google Drive\\School\\PhD\\Lab projects\\iat israel\\israel_data\\ethnicity\\ethnic_iat_wide.csv") %>% filter(year >= 2009)
gender_science <- fread("C:\\Users\\Lenovo\\Google Drive\\School\\PhD\\Lab projects\\iat israel\\israel_data\\gender_science\\gender_science_iat_wide.csv") #%>% filter(year >= 2009)
race <- fread("C:\\Users\\Lenovo\\Google Drive\\School\\PhD\\Lab projects\\iat israel\\israel_data\\race\\race_iat_wide.csv") %>% filter(year >= 2009)
sexuality <- fread("C:\\Users\\Lenovo\\Google Drive\\School\\PhD\\Lab projects\\iat israel\\israel_data\\sexuality\\sexuality_iat_wide.csv") %>% filter(year >= 2009)
weight <- fread("C:\\Users\\Lenovo\\Google Drive\\School\\PhD\\Lab projects\\iat israel\\israel_data\\weight\\weight_iat_wide.csv") %>% filter(year >= 2009)
skin <- fread("C:\\Users\\Lenovo\\Google Drive\\School\\PhD\\Lab projects\\iat israel\\israel_data\\skin\\skin_iat_wide.csv") %>% filter(year >= 2009)
usa <- fread("C:\\Users\\Lenovo\\Google Drive\\School\\PhD\\Lab projects\\iat israel\\israel_data\\usa\\usa_iat_wide.csv") %>% filter(year >= 2009)
race_iat <- race %>% select(session_id,IAT,Year) %>% mutate(Task = "Race")
age <- age %>% drop_na(year)
age$Year <- as.factor(age$year)
race <- race %>% drop_na(year)
race$Year <- as.factor(race$year)
skin <- skin %>% drop_na(year)
skin$Year <- as.factor(skin$year)
ethnic <- ethnic %>% drop_na(year)
ethnic$Year <- as.factor(ethnic$year)
weight <- weight %>% drop_na(year)
weight$Year <- as.factor(weight$year)
sexuality <- sexuality %>% drop_na(year)
sexuality$Year <- as.factor(sexuality$year)
usa <- usa %>% drop_na(year)
usa$Year <- as.factor(usa$year)
gender_science<- gender_science %>% drop_na(year)
gender_science$Year <- as.factor(gender_science$year)
race_iat <- race %>% select(session_id,IAT,Year) %>% mutate(Task = "Race")
skin_iat <- skin %>% select(session_id,IAT,Year) %>% mutate(Task = "Skin")
age_iat <- age %>% select(session_id,IAT,Year) %>% mutate(Task = "Age")
ethnic_iat <- ethnic %>% select(session_id,IAT,Year) %>% mutate(Task = "Ethnicity")
sex_iat <- sexuality %>% select(session_id,IAT,Year) %>% mutate(Task = "Sexuality")
usa_iat <- usa %>% select(session_id,IAT,Year) %>% mutate(Task = "Nationalism")
gender_science_iat <- gender_science %>% select(session_id,IAT,Year) %>% mutate(Task = "Gender-Science")
weight_iat <- weight %>% select(session_id,IAT,Year) %>% mutate(Task = "Weight")
all_iat <- bind_rows(race_iat,skin_iat,ethnic_iat,age_iat,sex_iat,usa_iat,gender_science_iat,weight_iat)
yy <- all_iat %>% group_by(Year,Task) %>% tally()
View(yy)
yyt <- as.data.frame(t(yy$n))
View(yyt)
yy %>%
pivot_wider(names_from = Task, values_from = c(n, Year))
yyw <- yy %>%
pivot_wider(names_from = Task, values_from = c(n, Year))
View(yyw)
yyw <- yy %>%
pivot_wider(names_from = Task, values_from = c(n))
View(yyw)
yy <- all_iat %>% group_by(Year,Task) %>% tally() %>%
pivot_wider(names_from = Task, values_from = c(n)) %>% kable() %>% kable_styling(bootstrap_options = c("striped", "hover", "condensed",full_width = F, position = "left"))
yy <- all_iat %>% group_by(Year,Task) %>% tally() %>%
pivot_wider(names_from = Task, values_from = c(n))
yy %>% kable() %>% kable_styling(bootstrap_options = c("striped", "hover", "condensed",full_width = F, position = "left"))
